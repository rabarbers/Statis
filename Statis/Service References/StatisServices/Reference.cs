//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace Statis.StatisServices {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Questionnaire", Namespace="http://schemas.datacontract.org/2004/07/StatisServiceContracts")]
    public partial class Questionnaire : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<Statis.StatisServices.Question> QuestionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Statis.StatisServices.Question> Questions {
            get {
                return this.QuestionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionsField, value) != true)) {
                    this.QuestionsField = value;
                    this.RaisePropertyChanged("Questions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/StatisServiceContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.TextQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgTextQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ChoiceQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgChoiceQuestion))]
    public partial class Question : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid QuestionIdField;
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImgQuestion", Namespace="http://schemas.datacontract.org/2004/07/StatisServiceContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.Questionnaire))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Statis.StatisServices.Question>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.Question))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgTextQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.TextQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgChoiceQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ChoiceQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Statis.StatisServices.Choice>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.Choice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.TextChoice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgChoice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.NumberChoice))]
    public partial class ImgQuestion : Statis.StatisServices.Question {
        
        private object ImageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextQuestion", Namespace="http://schemas.datacontract.org/2004/07/StatisServiceContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgTextQuestion))]
    public partial class TextQuestion : Statis.StatisServices.Question {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImgTextQuestion", Namespace="http://schemas.datacontract.org/2004/07/StatisServiceContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.Questionnaire))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Statis.StatisServices.Question>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.Question))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.TextQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgChoiceQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ChoiceQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Statis.StatisServices.Choice>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.Choice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.TextChoice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgChoice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.NumberChoice))]
    public partial class ImgTextQuestion : Statis.StatisServices.TextQuestion {
        
        private object ImgField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Img {
            get {
                return this.ImgField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgField, value) != true)) {
                    this.ImgField = value;
                    this.RaisePropertyChanged("Img");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChoiceQuestion", Namespace="http://schemas.datacontract.org/2004/07/StatisServiceContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgChoiceQuestion))]
    public partial class ChoiceQuestion : Statis.StatisServices.Question {
        
        private System.Collections.ObjectModel.ObservableCollection<Statis.StatisServices.Choice> ChoiceListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Statis.StatisServices.Choice> ChoiceList {
            get {
                return this.ChoiceListField;
            }
            set {
                if ((object.ReferenceEquals(this.ChoiceListField, value) != true)) {
                    this.ChoiceListField = value;
                    this.RaisePropertyChanged("ChoiceList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImgChoiceQuestion", Namespace="http://schemas.datacontract.org/2004/07/StatisServiceContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.Questionnaire))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Statis.StatisServices.Question>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.Question))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgTextQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.TextQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ChoiceQuestion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Statis.StatisServices.Choice>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.Choice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.TextChoice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgChoice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.NumberChoice))]
    public partial class ImgChoiceQuestion : Statis.StatisServices.ChoiceQuestion {
        
        private object ImgField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Img {
            get {
                return this.ImgField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgField, value) != true)) {
                    this.ImgField = value;
                    this.RaisePropertyChanged("Img");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Choice", Namespace="http://schemas.datacontract.org/2004/07/StatisServiceContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.TextChoice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.ImgChoice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Statis.StatisServices.NumberChoice))]
    public partial class Choice : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextChoice", Namespace="http://schemas.datacontract.org/2004/07/StatisServiceContracts")]
    public partial class TextChoice : Statis.StatisServices.Choice {
        
        private string OptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Option {
            get {
                return this.OptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionField, value) != true)) {
                    this.OptionField = value;
                    this.RaisePropertyChanged("Option");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImgChoice", Namespace="http://schemas.datacontract.org/2004/07/StatisServiceContracts")]
    public partial class ImgChoice : Statis.StatisServices.Choice {
        
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NumberChoice", Namespace="http://schemas.datacontract.org/2004/07/StatisServiceContracts")]
    public partial class NumberChoice : Statis.StatisServices.Choice {
        
        private double OptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Option {
            get {
                return this.OptionField;
            }
            set {
                if ((this.OptionField.Equals(value) != true)) {
                    this.OptionField = value;
                    this.RaisePropertyChanged("Option");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StatisServices.IQuestionnaireService")]
    public interface IQuestionnaireService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuestionnaireService/GetQuestionnaire", ReplyAction="http://tempuri.org/IQuestionnaireService/GetQuestionnaireResponse")]
        System.IAsyncResult BeginGetQuestionnaire(string questionnaireName, System.AsyncCallback callback, object asyncState);
        
        Statis.StatisServices.Questionnaire EndGetQuestionnaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuestionnaireService/StoreQuestionnaire", ReplyAction="http://tempuri.org/IQuestionnaireService/StoreQuestionnaireResponse")]
        System.IAsyncResult BeginStoreQuestionnaire(Statis.StatisServices.Questionnaire questionnaire, System.AsyncCallback callback, object asyncState);
        
        void EndStoreQuestionnaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuestionnaireService/DeleteQuestionnaire", ReplyAction="http://tempuri.org/IQuestionnaireService/DeleteQuestionnaireResponse")]
        System.IAsyncResult BeginDeleteQuestionnaire(string questionnaireName, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteQuestionnaire(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuestionnaireServiceChannel : Statis.StatisServices.IQuestionnaireService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetQuestionnaireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetQuestionnaireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Statis.StatisServices.Questionnaire Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Statis.StatisServices.Questionnaire)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuestionnaireServiceClient : System.ServiceModel.ClientBase<Statis.StatisServices.IQuestionnaireService>, Statis.StatisServices.IQuestionnaireService {
        
        private BeginOperationDelegate onBeginGetQuestionnaireDelegate;
        
        private EndOperationDelegate onEndGetQuestionnaireDelegate;
        
        private System.Threading.SendOrPostCallback onGetQuestionnaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginStoreQuestionnaireDelegate;
        
        private EndOperationDelegate onEndStoreQuestionnaireDelegate;
        
        private System.Threading.SendOrPostCallback onStoreQuestionnaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteQuestionnaireDelegate;
        
        private EndOperationDelegate onEndDeleteQuestionnaireDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteQuestionnaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public QuestionnaireServiceClient() {
        }
        
        public QuestionnaireServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuestionnaireServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionnaireServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionnaireServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetQuestionnaireCompletedEventArgs> GetQuestionnaireCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StoreQuestionnaireCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteQuestionnaireCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Statis.StatisServices.IQuestionnaireService.BeginGetQuestionnaire(string questionnaireName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetQuestionnaire(questionnaireName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Statis.StatisServices.Questionnaire Statis.StatisServices.IQuestionnaireService.EndGetQuestionnaire(System.IAsyncResult result) {
            return base.Channel.EndGetQuestionnaire(result);
        }
        
        private System.IAsyncResult OnBeginGetQuestionnaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string questionnaireName = ((string)(inValues[0]));
            return ((Statis.StatisServices.IQuestionnaireService)(this)).BeginGetQuestionnaire(questionnaireName, callback, asyncState);
        }
        
        private object[] OnEndGetQuestionnaire(System.IAsyncResult result) {
            Statis.StatisServices.Questionnaire retVal = ((Statis.StatisServices.IQuestionnaireService)(this)).EndGetQuestionnaire(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetQuestionnaireCompleted(object state) {
            if ((this.GetQuestionnaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetQuestionnaireCompleted(this, new GetQuestionnaireCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetQuestionnaireAsync(string questionnaireName) {
            this.GetQuestionnaireAsync(questionnaireName, null);
        }
        
        public void GetQuestionnaireAsync(string questionnaireName, object userState) {
            if ((this.onBeginGetQuestionnaireDelegate == null)) {
                this.onBeginGetQuestionnaireDelegate = new BeginOperationDelegate(this.OnBeginGetQuestionnaire);
            }
            if ((this.onEndGetQuestionnaireDelegate == null)) {
                this.onEndGetQuestionnaireDelegate = new EndOperationDelegate(this.OnEndGetQuestionnaire);
            }
            if ((this.onGetQuestionnaireCompletedDelegate == null)) {
                this.onGetQuestionnaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetQuestionnaireCompleted);
            }
            base.InvokeAsync(this.onBeginGetQuestionnaireDelegate, new object[] {
                        questionnaireName}, this.onEndGetQuestionnaireDelegate, this.onGetQuestionnaireCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Statis.StatisServices.IQuestionnaireService.BeginStoreQuestionnaire(Statis.StatisServices.Questionnaire questionnaire, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStoreQuestionnaire(questionnaire, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Statis.StatisServices.IQuestionnaireService.EndStoreQuestionnaire(System.IAsyncResult result) {
            base.Channel.EndStoreQuestionnaire(result);
        }
        
        private System.IAsyncResult OnBeginStoreQuestionnaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Statis.StatisServices.Questionnaire questionnaire = ((Statis.StatisServices.Questionnaire)(inValues[0]));
            return ((Statis.StatisServices.IQuestionnaireService)(this)).BeginStoreQuestionnaire(questionnaire, callback, asyncState);
        }
        
        private object[] OnEndStoreQuestionnaire(System.IAsyncResult result) {
            ((Statis.StatisServices.IQuestionnaireService)(this)).EndStoreQuestionnaire(result);
            return null;
        }
        
        private void OnStoreQuestionnaireCompleted(object state) {
            if ((this.StoreQuestionnaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StoreQuestionnaireCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StoreQuestionnaireAsync(Statis.StatisServices.Questionnaire questionnaire) {
            this.StoreQuestionnaireAsync(questionnaire, null);
        }
        
        public void StoreQuestionnaireAsync(Statis.StatisServices.Questionnaire questionnaire, object userState) {
            if ((this.onBeginStoreQuestionnaireDelegate == null)) {
                this.onBeginStoreQuestionnaireDelegate = new BeginOperationDelegate(this.OnBeginStoreQuestionnaire);
            }
            if ((this.onEndStoreQuestionnaireDelegate == null)) {
                this.onEndStoreQuestionnaireDelegate = new EndOperationDelegate(this.OnEndStoreQuestionnaire);
            }
            if ((this.onStoreQuestionnaireCompletedDelegate == null)) {
                this.onStoreQuestionnaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStoreQuestionnaireCompleted);
            }
            base.InvokeAsync(this.onBeginStoreQuestionnaireDelegate, new object[] {
                        questionnaire}, this.onEndStoreQuestionnaireDelegate, this.onStoreQuestionnaireCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Statis.StatisServices.IQuestionnaireService.BeginDeleteQuestionnaire(string questionnaireName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteQuestionnaire(questionnaireName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Statis.StatisServices.IQuestionnaireService.EndDeleteQuestionnaire(System.IAsyncResult result) {
            base.Channel.EndDeleteQuestionnaire(result);
        }
        
        private System.IAsyncResult OnBeginDeleteQuestionnaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string questionnaireName = ((string)(inValues[0]));
            return ((Statis.StatisServices.IQuestionnaireService)(this)).BeginDeleteQuestionnaire(questionnaireName, callback, asyncState);
        }
        
        private object[] OnEndDeleteQuestionnaire(System.IAsyncResult result) {
            ((Statis.StatisServices.IQuestionnaireService)(this)).EndDeleteQuestionnaire(result);
            return null;
        }
        
        private void OnDeleteQuestionnaireCompleted(object state) {
            if ((this.DeleteQuestionnaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteQuestionnaireCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteQuestionnaireAsync(string questionnaireName) {
            this.DeleteQuestionnaireAsync(questionnaireName, null);
        }
        
        public void DeleteQuestionnaireAsync(string questionnaireName, object userState) {
            if ((this.onBeginDeleteQuestionnaireDelegate == null)) {
                this.onBeginDeleteQuestionnaireDelegate = new BeginOperationDelegate(this.OnBeginDeleteQuestionnaire);
            }
            if ((this.onEndDeleteQuestionnaireDelegate == null)) {
                this.onEndDeleteQuestionnaireDelegate = new EndOperationDelegate(this.OnEndDeleteQuestionnaire);
            }
            if ((this.onDeleteQuestionnaireCompletedDelegate == null)) {
                this.onDeleteQuestionnaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteQuestionnaireCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteQuestionnaireDelegate, new object[] {
                        questionnaireName}, this.onEndDeleteQuestionnaireDelegate, this.onDeleteQuestionnaireCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Statis.StatisServices.IQuestionnaireService CreateChannel() {
            return new QuestionnaireServiceClientChannel(this);
        }
        
        private class QuestionnaireServiceClientChannel : ChannelBase<Statis.StatisServices.IQuestionnaireService>, Statis.StatisServices.IQuestionnaireService {
            
            public QuestionnaireServiceClientChannel(System.ServiceModel.ClientBase<Statis.StatisServices.IQuestionnaireService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetQuestionnaire(string questionnaireName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = questionnaireName;
                System.IAsyncResult _result = base.BeginInvoke("GetQuestionnaire", _args, callback, asyncState);
                return _result;
            }
            
            public Statis.StatisServices.Questionnaire EndGetQuestionnaire(System.IAsyncResult result) {
                object[] _args = new object[0];
                Statis.StatisServices.Questionnaire _result = ((Statis.StatisServices.Questionnaire)(base.EndInvoke("GetQuestionnaire", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStoreQuestionnaire(Statis.StatisServices.Questionnaire questionnaire, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = questionnaire;
                System.IAsyncResult _result = base.BeginInvoke("StoreQuestionnaire", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStoreQuestionnaire(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("StoreQuestionnaire", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteQuestionnaire(string questionnaireName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = questionnaireName;
                System.IAsyncResult _result = base.BeginInvoke("DeleteQuestionnaire", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteQuestionnaire(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteQuestionnaire", _args, result);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StatisServices.IQuestionnaireAdministrativeService")]
    public interface IQuestionnaireAdministrativeService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuestionnaireService/GetQuestionnaire", ReplyAction="http://tempuri.org/IQuestionnaireService/GetQuestionnaireResponse")]
        System.IAsyncResult BeginGetQuestionnaire(string questionnaireName, System.AsyncCallback callback, object asyncState);
        
        Statis.StatisServices.Questionnaire EndGetQuestionnaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuestionnaireService/StoreQuestionnaire", ReplyAction="http://tempuri.org/IQuestionnaireService/StoreQuestionnaireResponse")]
        System.IAsyncResult BeginStoreQuestionnaire(Statis.StatisServices.Questionnaire questionnaire, System.AsyncCallback callback, object asyncState);
        
        void EndStoreQuestionnaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuestionnaireService/DeleteQuestionnaire", ReplyAction="http://tempuri.org/IQuestionnaireService/DeleteQuestionnaireResponse")]
        System.IAsyncResult BeginDeleteQuestionnaire(string questionnaireName, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteQuestionnaire(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuestionnaireAdministrativeServiceChannel : Statis.StatisServices.IQuestionnaireAdministrativeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetQuestionnaireCompletedEventArgs1 : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetQuestionnaireCompletedEventArgs1(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Statis.StatisServices.Questionnaire Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Statis.StatisServices.Questionnaire)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuestionnaireAdministrativeServiceClient : System.ServiceModel.ClientBase<Statis.StatisServices.IQuestionnaireAdministrativeService>, Statis.StatisServices.IQuestionnaireAdministrativeService {
        
        private BeginOperationDelegate onBeginGetQuestionnaireDelegate;
        
        private EndOperationDelegate onEndGetQuestionnaireDelegate;
        
        private System.Threading.SendOrPostCallback onGetQuestionnaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginStoreQuestionnaireDelegate;
        
        private EndOperationDelegate onEndStoreQuestionnaireDelegate;
        
        private System.Threading.SendOrPostCallback onStoreQuestionnaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteQuestionnaireDelegate;
        
        private EndOperationDelegate onEndDeleteQuestionnaireDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteQuestionnaireCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public QuestionnaireAdministrativeServiceClient() {
        }
        
        public QuestionnaireAdministrativeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuestionnaireAdministrativeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionnaireAdministrativeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionnaireAdministrativeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetQuestionnaireCompletedEventArgs1> GetQuestionnaireCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StoreQuestionnaireCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteQuestionnaireCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Statis.StatisServices.IQuestionnaireAdministrativeService.BeginGetQuestionnaire(string questionnaireName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetQuestionnaire(questionnaireName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Statis.StatisServices.Questionnaire Statis.StatisServices.IQuestionnaireAdministrativeService.EndGetQuestionnaire(System.IAsyncResult result) {
            return base.Channel.EndGetQuestionnaire(result);
        }
        
        private System.IAsyncResult OnBeginGetQuestionnaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string questionnaireName = ((string)(inValues[0]));
            return ((Statis.StatisServices.IQuestionnaireAdministrativeService)(this)).BeginGetQuestionnaire(questionnaireName, callback, asyncState);
        }
        
        private object[] OnEndGetQuestionnaire(System.IAsyncResult result) {
            Statis.StatisServices.Questionnaire retVal = ((Statis.StatisServices.IQuestionnaireAdministrativeService)(this)).EndGetQuestionnaire(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetQuestionnaireCompleted(object state) {
            if ((this.GetQuestionnaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetQuestionnaireCompleted(this, new GetQuestionnaireCompletedEventArgs1(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetQuestionnaireAsync(string questionnaireName) {
            this.GetQuestionnaireAsync(questionnaireName, null);
        }
        
        public void GetQuestionnaireAsync(string questionnaireName, object userState) {
            if ((this.onBeginGetQuestionnaireDelegate == null)) {
                this.onBeginGetQuestionnaireDelegate = new BeginOperationDelegate(this.OnBeginGetQuestionnaire);
            }
            if ((this.onEndGetQuestionnaireDelegate == null)) {
                this.onEndGetQuestionnaireDelegate = new EndOperationDelegate(this.OnEndGetQuestionnaire);
            }
            if ((this.onGetQuestionnaireCompletedDelegate == null)) {
                this.onGetQuestionnaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetQuestionnaireCompleted);
            }
            base.InvokeAsync(this.onBeginGetQuestionnaireDelegate, new object[] {
                        questionnaireName}, this.onEndGetQuestionnaireDelegate, this.onGetQuestionnaireCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Statis.StatisServices.IQuestionnaireAdministrativeService.BeginStoreQuestionnaire(Statis.StatisServices.Questionnaire questionnaire, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStoreQuestionnaire(questionnaire, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Statis.StatisServices.IQuestionnaireAdministrativeService.EndStoreQuestionnaire(System.IAsyncResult result) {
            base.Channel.EndStoreQuestionnaire(result);
        }
        
        private System.IAsyncResult OnBeginStoreQuestionnaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Statis.StatisServices.Questionnaire questionnaire = ((Statis.StatisServices.Questionnaire)(inValues[0]));
            return ((Statis.StatisServices.IQuestionnaireAdministrativeService)(this)).BeginStoreQuestionnaire(questionnaire, callback, asyncState);
        }
        
        private object[] OnEndStoreQuestionnaire(System.IAsyncResult result) {
            ((Statis.StatisServices.IQuestionnaireAdministrativeService)(this)).EndStoreQuestionnaire(result);
            return null;
        }
        
        private void OnStoreQuestionnaireCompleted(object state) {
            if ((this.StoreQuestionnaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StoreQuestionnaireCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StoreQuestionnaireAsync(Statis.StatisServices.Questionnaire questionnaire) {
            this.StoreQuestionnaireAsync(questionnaire, null);
        }
        
        public void StoreQuestionnaireAsync(Statis.StatisServices.Questionnaire questionnaire, object userState) {
            if ((this.onBeginStoreQuestionnaireDelegate == null)) {
                this.onBeginStoreQuestionnaireDelegate = new BeginOperationDelegate(this.OnBeginStoreQuestionnaire);
            }
            if ((this.onEndStoreQuestionnaireDelegate == null)) {
                this.onEndStoreQuestionnaireDelegate = new EndOperationDelegate(this.OnEndStoreQuestionnaire);
            }
            if ((this.onStoreQuestionnaireCompletedDelegate == null)) {
                this.onStoreQuestionnaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStoreQuestionnaireCompleted);
            }
            base.InvokeAsync(this.onBeginStoreQuestionnaireDelegate, new object[] {
                        questionnaire}, this.onEndStoreQuestionnaireDelegate, this.onStoreQuestionnaireCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Statis.StatisServices.IQuestionnaireAdministrativeService.BeginDeleteQuestionnaire(string questionnaireName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteQuestionnaire(questionnaireName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Statis.StatisServices.IQuestionnaireAdministrativeService.EndDeleteQuestionnaire(System.IAsyncResult result) {
            base.Channel.EndDeleteQuestionnaire(result);
        }
        
        private System.IAsyncResult OnBeginDeleteQuestionnaire(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string questionnaireName = ((string)(inValues[0]));
            return ((Statis.StatisServices.IQuestionnaireAdministrativeService)(this)).BeginDeleteQuestionnaire(questionnaireName, callback, asyncState);
        }
        
        private object[] OnEndDeleteQuestionnaire(System.IAsyncResult result) {
            ((Statis.StatisServices.IQuestionnaireAdministrativeService)(this)).EndDeleteQuestionnaire(result);
            return null;
        }
        
        private void OnDeleteQuestionnaireCompleted(object state) {
            if ((this.DeleteQuestionnaireCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteQuestionnaireCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteQuestionnaireAsync(string questionnaireName) {
            this.DeleteQuestionnaireAsync(questionnaireName, null);
        }
        
        public void DeleteQuestionnaireAsync(string questionnaireName, object userState) {
            if ((this.onBeginDeleteQuestionnaireDelegate == null)) {
                this.onBeginDeleteQuestionnaireDelegate = new BeginOperationDelegate(this.OnBeginDeleteQuestionnaire);
            }
            if ((this.onEndDeleteQuestionnaireDelegate == null)) {
                this.onEndDeleteQuestionnaireDelegate = new EndOperationDelegate(this.OnEndDeleteQuestionnaire);
            }
            if ((this.onDeleteQuestionnaireCompletedDelegate == null)) {
                this.onDeleteQuestionnaireCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteQuestionnaireCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteQuestionnaireDelegate, new object[] {
                        questionnaireName}, this.onEndDeleteQuestionnaireDelegate, this.onDeleteQuestionnaireCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Statis.StatisServices.IQuestionnaireAdministrativeService CreateChannel() {
            return new QuestionnaireAdministrativeServiceClientChannel(this);
        }
        
        private class QuestionnaireAdministrativeServiceClientChannel : ChannelBase<Statis.StatisServices.IQuestionnaireAdministrativeService>, Statis.StatisServices.IQuestionnaireAdministrativeService {
            
            public QuestionnaireAdministrativeServiceClientChannel(System.ServiceModel.ClientBase<Statis.StatisServices.IQuestionnaireAdministrativeService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetQuestionnaire(string questionnaireName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = questionnaireName;
                System.IAsyncResult _result = base.BeginInvoke("GetQuestionnaire", _args, callback, asyncState);
                return _result;
            }
            
            public Statis.StatisServices.Questionnaire EndGetQuestionnaire(System.IAsyncResult result) {
                object[] _args = new object[0];
                Statis.StatisServices.Questionnaire _result = ((Statis.StatisServices.Questionnaire)(base.EndInvoke("GetQuestionnaire", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStoreQuestionnaire(Statis.StatisServices.Questionnaire questionnaire, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = questionnaire;
                System.IAsyncResult _result = base.BeginInvoke("StoreQuestionnaire", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStoreQuestionnaire(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("StoreQuestionnaire", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteQuestionnaire(string questionnaireName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = questionnaireName;
                System.IAsyncResult _result = base.BeginInvoke("DeleteQuestionnaire", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteQuestionnaire(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteQuestionnaire", _args, result);
            }
        }
    }
}
